<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wapkch.github.io</id>
    <title>Wapkch Blogs</title>
    <updated>2021-11-12T06:51:56.857Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wapkch.github.io"/>
    <link rel="self" href="https://wapkch.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://wapkch.github.io/images/avatar.png</logo>
    <icon>https://wapkch.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Wapkch Blogs</rights>
    <entry>
        <title type="html"><![CDATA[HandlerMapping组件]]></title>
        <id>https://wapkch.github.io/post/handlermapping-zu-jian</id>
        <link href="https://wapkch.github.io/post/handlermapping-zu-jian">
        </link>
        <updated>2021-11-11T03:52:15.000Z</updated>
        <content type="html"><![CDATA[<h1 id="继承体系">继承体系</h1>
<p><img src="https://wapkch.github.io/post-images/1636627539202.png" alt=""></p>
<h2 id="abstracthandlermapping">AbstractHandlerMapping</h2>
<p><img src="https://wapkch.github.io/post-images/1636687005788.png" alt=""></p>
<h3 id="11-gethandlerinternal">1.1 getHandlerInternal</h3>
<p>将 request 进行搜索找到对应的 handler 对象，委托给子类AbstractHandlerMethodMapping实现</p>
<h3 id="12-gethandlerexecutionchain">1.2 getHandlerExecutionChain</h3>
<p>获取 HandlerExecutionChain 对象，将<code>HandlerInterceptor</code>注入<br>
<img src="https://wapkch.github.io/post-images/1636687480823.png" alt=""></p>
<h3 id="13-hascorsconfigurationsource">1.3 hasCorsConfigurationSource</h3>
<p>主要做跨域支持，将<code>CorsConfiguration</code>注入<code>HandlerExecutionChain</code><br>
<img src="https://wapkch.github.io/post-images/1636688265771.png" alt=""><br>
<img src="https://wapkch.github.io/post-images/1636699702226.png" alt=""></p>
<h2 id="handlerinterceptor初始化">HandlerInterceptor初始化</h2>
<p><img src="https://wapkch.github.io/post-images/1636689655405.png" alt=""></p>
<ol>
<li>EnableWebMvcConfiguration<br>
<img src="https://wapkch.github.io/post-images/1636689887135.png" alt=""></li>
<li>WebMvcConfigurationSupport#getInterceptors<br>
<img src="https://wapkch.github.io/post-images/1636689476684.png" alt=""></li>
<li>WebMvcConfigurationSupport#addInterceptors<br>
<img src="https://wapkch.github.io/post-images/1636689504074.png" alt=""></li>
<li>DelegatingWebMvcConfiguration#addInterceptors</li>
<li>AbstractHandlerMapping#initApplicationContext<br>
<img src="https://wapkch.github.io/post-images/1636689725211.png" alt=""></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebApplicationContext上下文初始化]]></title>
        <id>https://wapkch.github.io/post/webapplicationcontext-shang-xia-wen-chu-shi-hua</id>
        <link href="https://wapkch.github.io/post/webapplicationcontext-shang-xia-wen-chu-shi-hua">
        </link>
        <updated>2021-11-06T03:20:22.000Z</updated>
        <content type="html"><![CDATA[<h1 id="contextloaderlistener">ContextLoaderListener</h1>
<p><img src="https://wapkch.github.io/post-images/1636169004316.png" alt=""></p>
<pre><code class="language-java">/**
 * Bootstrap listener to start up and shut down Spring's root {@link WebApplicationContext}.
 */
public class ContextLoaderListener extends ContextLoader implements ServletContextListener {

	/**
	 * Initialize the root web application context.
	 */
	@Override
	public void contextInitialized(ServletContextEvent event) {
		initWebApplicationContext(event.getServletContext());
	}
	
}
</code></pre>
<p><img src="https://wapkch.github.io/post-images/1636186246533.png" alt=""></p>
<h1 id="dispatcherservlet">DispatcherServlet</h1>
<p><img src="https://wapkch.github.io/post-images/1636186468959.png" alt=""><br>
<img src="https://wapkch.github.io/post-images/1636186868126.png" alt=""><br>
<img src="https://wapkch.github.io/post-images/1636186894214.png" alt=""><br>
<img src="https://wapkch.github.io/post-images/1636186939996.png" alt=""><br>
<img src="https://wapkch.github.io/post-images/1636186979731.png" alt=""></p>
]]></content>
    </entry>
</feed>